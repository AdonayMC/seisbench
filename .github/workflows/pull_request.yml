# This workflow runs on every pull request. It does the following:
#   1. Checks if black formatting is followed.
#   2. Runs all tests.

name: pull_request_action
on: pull_request

env:
  SEISBENCH_CACHE_ROOT: seisbench_cache

jobs:
  black_action:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Black Style Check
        run: |
          pip install git+git://github.com/psf/black@20.8b1
          python -m black . --check

  run_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: seisbench_cache
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      
      # Load SeisBench cache to ensure data sets are always locally available
      - name: Cache SeisBench
        uses: actions/cache@v2
        with:
          path: ~/.seisbench
          key: seisbench-cache
          restore-keys: |
            seisbench-cache
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f setup.py ]; then pip install -e . ; fi
      
      - name: Test with pytest
        run: |
          pytest tests/
